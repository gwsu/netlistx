
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '09C076E54859206453127B4933136C1D'
    
_lr_action_items = {'NUMBER':([110,],[115,]),'INOUT':([1,4,5,12,27,29,31,43,44,45,56,],[8,-7,8,-6,-10,-8,-12,-11,-9,-13,-3,]),'STRING_CON':([114,],[118,]),'WIRE':([4,5,10,12,13,23,27,29,31,35,43,44,45,48,],[-7,11,-15,-6,11,-14,-10,-8,-12,-17,-11,-9,-13,-16,]),')':([33,34,47,50,58,59,61,62,69,70,71,79,87,93,98,],[46,-5,-4,-33,-31,-32,-26,68,-25,76,77,87,-27,98,-28,]),'(':([9,42,54,55,67,],[20,53,63,64,74,]),'.':([53,61,62,63,64,69,70,71,87,89,95,97,98,],[60,-26,60,60,60,-25,60,60,-27,94,100,102,-28,]),'INIT':([94,100,102,],[99,104,107,]),'ENDMODULE':([24,25,37,40,41,52,72,73,75,80,82,83,88,90,91,106,112,117,119,120,122,],[-19,38,-18,-43,51,-42,-44,-45,-20,-22,-35,-21,-34,-23,-24,-36,-37,-39,-40,-38,-41,]),'BIT':([42,50,89,],[54,58,97,]),'IDENTIFIER':([2,6,7,8,10,11,13,15,17,19,20,22,23,24,25,26,33,34,35,37,39,47,48,50,57,58,59,60,74,75,78,80,81,82,83,85,86,88,90,91,92,100,106,112,117,119,120,122,],[9,14,16,18,-15,21,26,28,30,32,34,36,-14,-19,26,42,47,-5,-17,-18,50,-4,-16,-33,50,-31,-32,67,50,-20,50,-22,89,-35,-21,-30,50,-34,-23,-24,-29,105,-36,-37,-39,-40,-38,-41,]),'=':([49,50,58,59,89,99,104,105,107,],[57,-33,-31,-32,96,103,109,110,111,]),'ASSIGN':([24,25,37,40,41,52,72,73,75,80,82,83,88,90,91,106,112,117,119,120,122,],[-19,39,-18,-43,39,-42,-44,-45,-20,-22,-35,-21,-34,-23,-24,-36,-37,-39,-40,-38,-41,]),'$end':([3,38,51,],[0,-2,-1,]),'MODULE':([0,],[2,]),'"':([110,118,],[114,121,]),'INPUT':([1,4,5,12,27,29,31,43,44,45,56,],[7,-7,7,-6,-10,-8,-12,-11,-9,-13,-3,]),';':([14,16,18,21,28,30,32,36,46,50,58,59,65,66,68,76,77,101,108,113,115,116,121,],[27,29,31,35,43,44,45,48,56,-33,-31,-32,72,73,75,83,84,106,112,117,119,120,122,]),'BIN_NUMBER':([57,],[66,]),'DEFPARAM':([75,80,82,83,84,88,90,91,106,112,117,119,120,122,],[81,81,-35,81,81,-34,81,81,-36,-37,-39,-40,-38,-41,]),'VECTOR':([6,7,8,11,42,50,89,],[15,17,19,22,55,59,95,]),'OUTPUT':([1,4,5,12,27,29,31,43,44,45,56,],[6,-7,6,-6,-10,-8,-12,-11,-9,-13,-3,]),'{':([74,],[78,]),'HEX_NUMBER':([96,103,109,111,],[101,108,113,116,]),'}':([50,58,59,85,86,92,],[-33,-31,-32,-30,93,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'signal_decl':([5,13,],[10,23,]),'primitive':([13,25,],[24,37,]),'module_decl':([0,],[1,]),'port_decl':([1,5,],[4,12,]),'primitive_port':([53,62,63,64,70,71,],[61,69,61,61,69,69,]),'defparam_stm':([75,80,83,84,90,91,],[82,88,82,82,88,88,]),'primitive_list':([13,],[25,]),'port_decl_list':([1,],[5,]),'defparam_list':([75,83,84,],[80,90,91,]),'signal_decl_list':([5,],[13,]),'vm_file':([0,],[3,]),'pipo_list':([20,],[33,]),'assign_stm':([25,41,],[40,52,]),'joint_signal_list':([78,],[86,]),'assign_stm_list':([25,],[41,]),'primitive_port_list':([53,63,64,],[62,70,71,]),'signal_element':([39,57,74,78,86,],[49,65,79,85,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> vm_file","S'",1,None,None,None),
  ('vm_file -> module_decl port_decl_list signal_decl_list primitive_list assign_stm_list ENDMODULE','vm_file',6,'p_vmfile','netlist_parser.py',20),
  ('vm_file -> module_decl port_decl_list signal_decl_list primitive_list ENDMODULE','vm_file',5,'p_vmfile','netlist_parser.py',21),
  ('module_decl -> MODULE IDENTIFIER ( pipo_list ) ;','module_decl',6,'p_module_decl','netlist_parser.py',41),
  ('pipo_list -> pipo_list IDENTIFIER','pipo_list',2,'p_pipo_list','netlist_parser.py',46),
  ('pipo_list -> IDENTIFIER','pipo_list',1,'p_pipo_list','netlist_parser.py',47),
  ('port_decl_list -> port_decl_list port_decl','port_decl_list',2,'p_port_decl_list','netlist_parser.py',54),
  ('port_decl_list -> port_decl','port_decl_list',1,'p_port_decl_list','netlist_parser.py',55),
  ('port_decl -> INPUT IDENTIFIER ;','port_decl',3,'p_port_decl','netlist_parser.py',65),
  ('port_decl -> INPUT VECTOR IDENTIFIER ;','port_decl',4,'p_port_decl','netlist_parser.py',66),
  ('port_decl -> OUTPUT IDENTIFIER ;','port_decl',3,'p_port_decl','netlist_parser.py',67),
  ('port_decl -> OUTPUT VECTOR IDENTIFIER ;','port_decl',4,'p_port_decl','netlist_parser.py',68),
  ('port_decl -> INOUT IDENTIFIER ;','port_decl',3,'p_port_decl','netlist_parser.py',69),
  ('port_decl -> INOUT VECTOR IDENTIFIER ;','port_decl',4,'p_port_decl','netlist_parser.py',70),
  ('signal_decl_list -> signal_decl_list signal_decl','signal_decl_list',2,'p_signal_decl_list','netlist_parser.py',81),
  ('signal_decl_list -> signal_decl','signal_decl_list',1,'p_signal_decl_list','netlist_parser.py',82),
  ('signal_decl -> WIRE VECTOR IDENTIFIER ;','signal_decl',4,'p_signal_decl','netlist_parser.py',92),
  ('signal_decl -> WIRE IDENTIFIER ;','signal_decl',3,'p_signal_decl','netlist_parser.py',93),
  ('primitive_list -> primitive_list primitive','primitive_list',2,'p_primitive_list','netlist_parser.py',103),
  ('primitive_list -> primitive','primitive_list',1,'p_primitive_list','netlist_parser.py',104),
  ('primitive -> IDENTIFIER IDENTIFIER ( primitive_port_list ) ;','primitive',6,'p_primitive','netlist_parser.py',113),
  ('primitive -> IDENTIFIER IDENTIFIER BIT ( primitive_port_list ) ;','primitive',7,'p_primitive','netlist_parser.py',114),
  ('primitive -> IDENTIFIER IDENTIFIER ( primitive_port_list ) ; defparam_list','primitive',7,'p_primitive','netlist_parser.py',115),
  ('primitive -> IDENTIFIER IDENTIFIER BIT ( primitive_port_list ) ; defparam_list','primitive',8,'p_primitive','netlist_parser.py',116),
  ('primitive -> IDENTIFIER IDENTIFIER VECTOR ( primitive_port_list ) ; defparam_list','primitive',8,'p_primitive','netlist_parser.py',117),
  ('primitive_port_list -> primitive_port_list primitive_port','primitive_port_list',2,'p_primitive_port_list','netlist_parser.py',135),
  ('primitive_port_list -> primitive_port','primitive_port_list',1,'p_primitive_port_list','netlist_parser.py',136),
  ('primitive_port -> . IDENTIFIER ( signal_element )','primitive_port',5,'p_primitive_port','netlist_parser.py',145),
  ('primitive_port -> . IDENTIFIER ( { joint_signal_list } )','primitive_port',7,'p_primitive_port','netlist_parser.py',146),
  ('joint_signal_list -> joint_signal_list signal_element','joint_signal_list',2,'p_joint_signal','netlist_parser.py',154),
  ('joint_signal_list -> signal_element','joint_signal_list',1,'p_joint_signal','netlist_parser.py',155),
  ('signal_element -> IDENTIFIER BIT','signal_element',2,'p_signal_element','netlist_parser.py',164),
  ('signal_element -> IDENTIFIER VECTOR','signal_element',2,'p_signal_element','netlist_parser.py',165),
  ('signal_element -> IDENTIFIER','signal_element',1,'p_signal_element','netlist_parser.py',166),
  ('defparam_list -> defparam_list defparam_stm','defparam_list',2,'p_defparam_list','netlist_parser.py',180),
  ('defparam_list -> defparam_stm','defparam_list',1,'p_defparam_list','netlist_parser.py',181),
  ('defparam_stm -> DEFPARAM IDENTIFIER = HEX_NUMBER ;','defparam_stm',5,'p_defparam_','netlist_parser.py',190),
  ('defparam_stm -> DEFPARAM IDENTIFIER . INIT = HEX_NUMBER ;','defparam_stm',7,'p_defparam_','netlist_parser.py',191),
  ('defparam_stm -> DEFPARAM IDENTIFIER BIT . INIT = HEX_NUMBER ;','defparam_stm',8,'p_defparam_','netlist_parser.py',192),
  ('defparam_stm -> DEFPARAM IDENTIFIER VECTOR . INIT = HEX_NUMBER ;','defparam_stm',8,'p_defparam_','netlist_parser.py',193),
  ('defparam_stm -> DEFPARAM IDENTIFIER VECTOR . IDENTIFIER = NUMBER ;','defparam_stm',8,'p_defparam_','netlist_parser.py',194),
  ('defparam_stm -> DEFPARAM IDENTIFIER VECTOR . IDENTIFIER = " STRING_CON " ;','defparam_stm',10,'p_defparam_','netlist_parser.py',195),
  ('assign_stm_list -> assign_stm_list assign_stm','assign_stm_list',2,'p_assign_stm_list','netlist_parser.py',212),
  ('assign_stm_list -> assign_stm','assign_stm_list',1,'p_assign_stm_list','netlist_parser.py',213),
  ('assign_stm -> ASSIGN signal_element = signal_element ;','assign_stm',5,'p_assign_stm','netlist_parser.py',222),
  ('assign_stm -> ASSIGN signal_element = BIN_NUMBER ;','assign_stm',5,'p_assign_stm','netlist_parser.py',223),
]
